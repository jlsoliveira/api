version: '3.7'

services:
  db:
    image: postgres:latest
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./docker/init-postgres.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      - api-network
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: api
    container_name: api
    restart: unless-stopped
    env_file: .env.development
    environment:
      - NODE_ENV=development
      - API_PORT=$API_PORT
    ports:
      - "${API_PORT}:${API_PORT}"
      - "9229:9229"
    depends_on:
      - db
    volumes:
      - .:/home/node/app
      - ./node_modules:/home/node/app/node_modules
    networks:
      - api-network
    command: ./docker/wait-for.sh db:$DB_PORT -- npm run start:dev
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASSWORD
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - api-network

networks:
  api-network:
    driver: bridge